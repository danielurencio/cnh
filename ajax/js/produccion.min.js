$(function() {
  document.getElementById("chkAsignaciones").checked;
  document.getElementById("chkContratos").checked;
  document.getElementById("dataTypeGas").checked = false;
  document.getElementById("dataTypeOil").checked = true;
  document.getElementById("sYear").value = 2016;
  document.getElementById("sMonth").value = "01";
  document.getElementById("eYear").value = 2017;
  document.getElementById("eMonth").value = "06";

  d3.select("div.dashboard-content").style("padding",0);
  var divWidth = d3.select("div#chart").style("width").split("p")[0]//window.innerWidth;
  var divHeight = window.innerHeight;
  var frameHeight = +d3.select("div.dashboard-content")
	.style("height").split("p")[0];
  
  d3.select("div#chart").style("height",(divHeight-frameHeight))

  d3.select("div#chart")
    .append("svg")
    .attr({
      "width": divWidth,
      "height": (divHeight - frameHeight),
      "id":"chart"
    });

  var nombresCamposInicio = ajaxConfig();
  nombresCamposInicio.url = "http://portal.cnih.cnh.gob.mx/api/nombres_campos.py";
  nombresCamposInicio.data = {
	  'type': 'oil',
	  'sdate': '2016-01-01',
	  'edate': '2017-06-01', // <-- OJO! ¿No debería de actualizarse?
	  'contract': 'Asignaciones;Contratos;',//tipos(),
	  'operator': '',
	  'category': 'phidro;',
	  'field': 'all;',
	  'term':''
  };

  nombresCamposInicio.success = function(response) {
    var campos = JSON.parse(response);
    var Sizes = campos.map(function(d) { return d.size; });
    var tipos = campos.map(function(d) { return d.type; })

    var scale = d3.scale.linear()
	.domain(d3.extent(Sizes))
	.range([10,22])

    d3.select("ul.campos").selectAll("li")
      .data(campos).enter().append("li").append("mark")
	.html(function(d) { return d.name; })
	.style("color",function(d) { 
	  if(d.type == "Terrestre") return "black";
	  else return "rgba(51,171,249,1)";
	})
	.style("font-size", function(d) { return String(scale(d.size)) + "px"; })
	.on("mouseover", function(d) {
	  d3.select(this).style("color","white");
	})
	.on("mouseout",function(d) {
	  if(d.type == "Terrestre") d3.select(this).style("color","black");
	  else d3.select(this).style("color","rgba(51,171,249,1)");
	})
	.on("click", function(d) {
	  var field = d3.select(this).html();
	  var field_ = field.split(" ").reduce(function sum(a,b) {
	    return a + "_" + b;
	  });
	  var activ = { 'field':field_ };
//	  if(d3.select("path#nacional")) d3.select("path#nacional").remove();
	  if(d3.select(this).attr("id")) {
	    d3.select(this).style("background-color",null)
	    d3.select(this).attr("id",null)
	    activ.erase = true;
	    delete chartC.datasets[activ.field];
	    d3.select("#" + activ.field).remove()
	  } else {
	    d3.select(this).style("background-color","red")
	    d3.select(this).attr("id","selected")
	    activ.erase = false;
	  }
	  var obj = ajaxConfig();
	  obj.data = getFormValues();
	  obj.data.field = field;
	  obj.url = "http://portal.cnih.cnh.gob.mx/api/produccion_campos.py"

	  obj.success = function(response) {
	    var data = [];
	     response.data.forEach(function(d) {
	       var doc = { 'date':d[0], 'close':d[1] };
	       data.push(doc);
	     });
	     var lineaNacional = d3.select("path#nacional")
	     if(lineaNacional) lineaNacional.remove();
	     chartC.axisTransition(data,activ);
	  };

	  AJAX(obj);
	});
     
  };

  AJAX(nombresCamposInicio);


  var margin = {
    width:divWidth*1,
    height:divHeight-frameHeight,
    top: 0,
    right: 50,
    bottom: 30,
    left: 100,
    transform: [divWidth*0,0]
  };
  var parseDate = d3.time.format("%Y-%m-%d").parse;

/// CREATE INSTANCE OF Chart OBJECT
  var chartC = new Chart("svg#chart",margin,parseDate) // <--prod_inicio


  var produccionCamposInicio = JSON.parse(JSON.stringify(nombresCamposInicio));
  produccionCamposInicio.url = "http://portal.cnih.cnh.gob.mx/api/produccion_campos.py";
  produccionCamposInicio.operator = 1;
  produccionCamposInicio.success = function(response) {
//	   console.log(tipos());
	   var data = [];
	   response.data.forEach(function(d) {
	     var doc = { 'date':d[0], 'close':d[1] };
	     data.push(doc);
	   });
	   if(d3.select("svg#chart>g#chart")) d3.select("g#chart").remove()
	   chartC.getData(data);
	   chartC.Render()
	   d3.select("path.line").attr("id","nacional")
	};

  AJAX(produccionCamposInicio);

  $("#setFilter").click(function() {

    var formValues = getFormValues();
//"http://172.16.24.57/pruebas_ws/produccion_campos_html.py"
//"http://portal.cnih.cnh.gob.mx/api/produccion_campos.py"

    var produccionConClick = JSON.parse(JSON.stringify(produccionCamposInicio));
    produccionConClick.data = formValues;
    produccionConClick.success = function(response) {
           var data = [];
           response.data.forEach(function(d) {
             var doc = { 'date':d[0], 'close':d[1] };
             data.push(doc);
           });
//           if(d3.select("g#chart")) d3.select("g#chart").remove()
//           Chart(data,"svg#chart",margin,parseDate) <--prod_forms
    }

    AJAX(produccionConClick);
  })
});

function Chart(selection,margin,parseDate) {
  this.datasets = {}
  this.Nacional = true;
  this.getData = function(x) {
   this.data = x;
// Parse the date / time
   this.data.forEach(function(d) {
     d.date = parseDate(d.date);
     d.close = +d.close;
   });
  };

 this.axisTransition = function(x,activ) {
   var newData = x;
   newData.forEach(function(d) { 
     d.date = parseDate(d.date);
     d.close = +d.close;
   })

   if(!activ.erase) this.datasets[activ.field] = newData;
   console.log(this.datasets,activ.erase);
   var newDateExt = d3.extent(newData, function(d) { return d.date; });
   var newCloseExt = d3.extent(newData, function(d) { return d.close; });

   if(this.Nacional) {
     this.yMin = newCloseExt[0];
     this.yMax = newCloseExt[1];
     this.xMin = newDateExt[0];
     this.xMax = newDateExt[1];
     this.Nacional = false;
   } else { 
     var closeVals = [],dateVals = [];
     for(var k in this.datasets) {
	var closes = this.datasets[k].map(function(d) { return d.close; });
	var dates = this.datasets[k]
	  .map(function(d) { return d.date; });

	closeVals = closeVals.concat(closes);
	dateVals = dateVals.concat(dates);
     }
     this.yMax = d3.max(closeVals);
     this.yMin = d3.min(closeVals);
     this.xMin = d3.min(dateVals);//newDateExt[0];
     this.xMax = d3.max(dateVals);//newDateExt[1];
   }


     this.Y.domain([this.yMin,this.yMax]);
     this.X.domain([this.xMin,this.xMax]);
     var yScale = this.Y, xScale = this.X;
     var yAx = d3.select("g#y");
     var xAx = d3.select("g#x");
     yAx.transition().duration(500).call(this.yAxis);
     xAx.transition().duration(500).call(this.xAxis);

   var datasets = this.datasets;
   var valueline = this.valueline;
   var innerChart = d3.select("g.innerChart");

   innerChart.transition().selectAll(".line")
	.attr("d",function(d) { 
	  var id = d3.select(this).attr("id");
	  var line = d3.svg.line()
	    .x(function(doc) { return xScale(doc.date); })
	    .y(function(doc) { return yScale(doc.close); });

	  return line(datasets[id]);
	})
	.attr("stroke-dasharray",null);

   var newLine = d3.select("#" + activ.field);
   if(!newLine.node() && !activ.erase) {
      innerChart.append("path")
       .attr("class", "line")
       .attr("id",activ.field)
       .attr("d", this.valueline(newData))
       .attr("stroke-dasharray",function(d){
         var largo = d3.select(this).node().getTotalLength();
         return String(largo) + " " + String(largo);
       })
       .attr("stroke-dashoffset",function(d) {
         var largo = d3.select(this).node().getTotalLength();
         return largo;
       })
       .transition()
         .duration(800)
         .attr("stroke-dashoffset",0);
   };
 };

 var width = margin.width - margin.left - margin.right;
 var height = margin.height - margin.top - margin.bottom;

// Set the ranges
 this.X = d3.time.scale().range([0, width]);
 this.Y = d3.scale.linear().range([height, 0]);
 this.x_Scale = this.X, this.y_Scale = this.Y;

// Define the axes
 this.xAxis = d3.svg.axis().scale(this.X)
  .orient("bottom").ticks(5);

 this.yAxis = d3.svg.axis().scale(this.Y)
  .orient("left").ticks(5);

// Define the line
 this.valueline = d3.svg.line()
  .interpolate("linear")
  .x(function(d) { return this.x_Scale(d.date); })
  .y(function(d) { return this.y_Scale(d.close); });

  this.Render = function() {
   var data = this.data;
// Adds the svg canvas
   var svg = d3.select(selection)
    .append("g").attr("id","chart")
   .append("svg").style({"display":"block","margin":"auto"})
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
    .append("g").attr("class","innerChart")
    .attr("transform","translate(" + margin.left + "," + margin.top + ")");

   this.DateExt = d3.extent(data, function(d) { return d.date; });
   this.CloseExt = d3.extent(data, function(d) { return d.close; });
   this.yMax = this.CloseExt[1]
   this.yMin = this.CloseExt[0]
// Scale the range of the data
   this.X.domain(this.DateExt);
   this.Y.domain(this.CloseExt);

// Add the valueline path.
   svg.append("path")
    .attr("class", "line")
    .attr("d", this.valueline(data))
    .attr("stroke-dasharray",function(d){
      var largo = d3.select(".line").node().getTotalLength();
      return String(largo) + " " + String(largo);
    })
    .attr("stroke-dashoffset",function(d) {
      var largo = d3.select(".line").node().getTotalLength();
      return largo;
    })
    .transition()
      .duration(800)
      .attr("stroke-dashoffset",0);

// Add the X Axis
   svg.append("g")
    .attr("class", "axis")
    .attr("id","x")
    .attr("transform", "translate(0," + height + ")")
    .call(this.xAxis);

// Add the Y Axis
   svg.append("g")
    .attr("class", "axis")
    .attr("id","y")
    .call(this.yAxis);


    if(margin.transform) {
      var x = margin.transform[0];
      var y = margin.transform[1];
      d3.select("g#chart")
       .attr("transform","translate(" + x + "," + y + ")");
    }
  }
}


function AJAX(obj) {
    $.ajax(obj);
};

function getFormValues() {
    var chkAsignaciones = document.getElementById("chkAsignaciones").checked;
    var chkContratos = document.getElementById("chkContratos").checked;
    var dataTypeGas = document.getElementById("dataTypeGas").checked;
    var dataTypeOil = document.getElementById("dataTypeOil").checked;
    var sYear = document.getElementById("sYear").value;
    var sMonth = document.getElementById("sMonth").value;
    var eYear = document.getElementById("eYear").value;
    var eMonth = document.getElementById("eMonth").value;
    var operator = document.getElementById("dataOperator").value;
    var f = { 'sYear':sYear, 'sMonth':sMonth, 'eYear':eYear, 'eMonth':eMonth };

    function type() {
	var t;
	if(dataTypeGas && dataTypeOil) {
	  t = "oil;gas";
	}
	if(dataTypeGas && !dataTypeOil) {
	  t = "gas";
	}
	if(!dataTypeGas && dataTypeOil) {
	  t = "oil";
	}

	return t;
    };

    function Periodicidad() {
	var periodicidad;
	var arr = document.getElementsByClassName("periodicidad");
	for(var i in arr) {
	  if(arr[i].checked) periodicidad = arr[i].value;
	}

	return periodicidad;
    };

    function fecha(f) {
	var obj = { 'sDate':'', 'eDate':'' };
	obj.sDate = f.sYear + '-' + f.sMonth + '-01';
	obj.eDate = f.eYear + '-' + f.eMonth + '-01';

	return obj;
    };

    var tipos = function() {
	var result = d3.selectAll('input[name=inpTipos]')[0]
	  .filter(function(d) { return d.checked; })
	  .map(function(d) { return d.value; })
	  .reduce(function sum(a,b) { return a + ";" + b; });

	return result + ";";
    };

    var obj = {
	  'type': type(),
	  'sdate': fecha(f).sDate,
	  'edate': fecha(f).eDate,
	  'contract': tipos(),
	  'operator': operator,
	  'category': 'phidro;',
	  'field': 'all;', // <---------------- ¡OJO! Crear función también.
	  'term':Periodicidad()
    };

    return obj;
}

function ajaxConfig() {
    var obj = {
	url:"",
	type:"post",
	datatype:"json",
	data: {},
	success: function(response) {
	   console.log(response);
	},
	error: function() { console.log("!", type()); }
    }

    return obj;
}
